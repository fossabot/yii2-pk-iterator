on:
  - pull_request
  - push

name: test

jobs:
  tests:
    name: Testing with yii2:${{ matrix.yii }}. PHP ${{ matrix.php }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - "ubuntu-18.04"
          - "ubuntu-latest"
        php:
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
        yii:
          - "2.0.27"
          - "2.0.32"
          - "^2.0"

    env:
      OS: ${{ matrix.os }}
      php: ${{ matrix.php }}
      extensions: pdo, pdo_mysql

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'
          coverage: pcov
          tools: composer:v2

      - name: Prepare files
        run: |
          cp phpunit.dist.xml phpunit.xml
          cp psalm.dist.xml psalm.xml

      - name: Update composer
        run: composer self-update && composer diagnose

      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Install specific Yii version
        run: composer require -W --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi yiisoft/yii2:${{ matrix.yii }}

      - name: Run Psalm
        run: vendor/bin/psalm --output-format=github

      - uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          flags: unit
          env_vars: OS,PHP,YII
          fail_ci_if_error: false
          verbose: true

#      - name: Setup source database
#        run: |
#          sudo /etc/init.d/mysql start
#          mysql -uroot -proot -e 'CREATE DATABASE `test`;'
#          mysql -D yiitest -uroot -proot < tests/data/source.sql

#      - name: Run tests with phpunit
#        if: matrix.php != '8.0'
#        run: vendor/bin/phpunit --colors=always
#
#      - name: Run tests with phpunit
#        if: matrix.php == '8.0'
#        run: vendor/bin/phpunit --coverage-clover=clover.xml --colors=always
#
#      - name: Upload code coverage scrutinizer
#        if: matrix.php == '8.0'
#        run: |
#          wget https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
#          php ocular.phar code-coverage:upload --format=php-clover coverage.clover
